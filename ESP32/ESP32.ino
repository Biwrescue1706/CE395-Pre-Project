#include <WiFi.h>
#include <Wire.h>
#include <BH1750.h>
#include <DHT.h>
#include <HTTPClient.h>
#include <WiFiClientSecure.h>

// ==== DHT22 ====
#define DHTPIN 14
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);

// ==== BH1750 ====
BH1750 lightMeter;

// ==== WiFi ====
char ssid[] = "BiwBong";
char pass[] = "17061706";

// ==== Backend URL ====
const char* serverUrl = "https://ce395backend.loca.lt/sensor-data";

void setup() {
  Serial.begin(115200);
  delay(100);

  Serial.println("üîå USB ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß");
  Serial.print("üì∂ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WiFi: ");
  Serial.println(ssid);
  WiFi.begin(ssid, pass);

  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED && attempts < 20) {
    delay(1000);
    Serial.print(".");
    attempts++;
  }

  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\n‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WiFi ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    Serial.print("üì° IP ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ: ");
    Serial.println(WiFi.localIP());
  } else {
    Serial.println("\n‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WiFi ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
  }

  Wire.begin(21, 22);  // SDA, SCL
  if (lightMeter.begin()) {
    Serial.println("‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô BH1750 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
  } else {
    Serial.println("‚ùå ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô BH1750 ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ");
  }

  dht.begin();
  Serial.println("üå° ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏ã‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå DHT22...");
}

void checkWiFiConnection() {
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("üîÑ WiFi ‡∏´‡∏•‡∏∏‡∏î! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà...");
    WiFi.begin(ssid, pass);

    int attempts = 0;
    while (WiFi.status() != WL_CONNECTED && attempts < 20) {
      delay(500);
      Serial.print(".");
      attempts++;
    }

    if (WiFi.status() == WL_CONNECTED) {
      Serial.println("\n‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      Serial.print("üì° IP ‡πÉ‡∏´‡∏°‡πà: ");
      Serial.println(WiFi.localIP());
    } else {
      Serial.println("\n‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    }
  }
}

void loop() {
  checkWiFiConnection();

  float temp = dht.readTemperature();
  float humidity = dht.readHumidity();
  int light = lightMeter.readLightLevel();

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á
  if (isnan(temp && humidity)) Serial.println("‚ö†Ô∏è temp ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ");
  if (isnan(humidity)) Serial.println("‚ö†Ô∏è humidity ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ");
  if (isnan(light)) Serial.println("‚ö†Ô∏è light ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ");

  // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
  Serial.printf("üå° ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥ : %.2f ¬∞C\n", temp);
  Serial.printf("üíß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô : %.2f %%\n", humidity);
  Serial.printf("üí° ‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î : %d lx\n", light);
  Serial.println("---------------------\n");

  // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Backend
  if (WiFi.status() == WL_CONNECTED) {
    WiFiClientSecure client;
    client.setInsecure();
    HTTPClient http;
    http.begin(client, serverUrl);
    http.addHeader("Content-Type", "application/json");

    String jsonData = "{\"light\":" + String(light) + ",\"temp\":" + String(temp) + ",\"humidity\":" + String(humidity) + "}";
    Serial.print("üì§ POST JSON: ");
    Serial.println(jsonData);
    Serial.print("------------------------------------------- \n");

    int httpResponseCode = http.POST(jsonData);

    if (httpResponseCode > 0) {
      Serial.print("‚úÖ ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ Backend : ");
      Serial.print(serverUrl);
      Serial.print(" ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      Serial.print("\n httpResponseCode ");
      Serial.println(httpResponseCode);
      Serial.println("------------------------------------------- ");
    } else {
      Serial.print("‚ùå ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ Backend : ");
      Serial.print(serverUrl);
      Serial.print(" ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      Serial.print("\n httpResponseCode ");
      Serial.println(httpResponseCode);
      Serial.println("------------------------------------------- ");
    }

    http.end();
  }

  delay(1500);  // ‡∏´‡∏ô‡πà‡∏ß‡∏á 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
}
