const API_URL = "http://localhost:3000/latest";

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Backend
async function fetchSensorData() {
  try {
    const response = await fetch(API_URL);
    const data = await response.json();
    console.log(data);

    const light = data.light;
    const temp = data.temp;
    const humidity = data.humidity;

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏î‡∏¥‡∏ö
    document.getElementById("light").textContent = light;
    document.getElementById("temp").textContent = temp;
    document.getElementById("humidity").textContent = humidity;

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢
    const now = new Date();
    const thaiDate = getThaiDateParts(now);
    const fullDateTime = `${thaiDate.dayOfWeek}‡∏ó‡∏µ‡πà ${thaiDate.day} ${thaiDate.month} ‡∏û.‡∏®. ${thaiDate.year} ‡πÄ‡∏ß‡∏•‡∏≤ ${thaiDate.time} ‡∏ô.`;
    document.getElementById("timestamp").textContent = fullDateTime;

    // ‡πÅ‡∏õ‡∏•‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á
    let lightStatus;
    if (light > 65535) lightStatus = "‡πÅ‡∏™‡∏á‡∏à‡πâ‡∏≤‡∏°‡∏≤‡∏Å‡πÜ üåû";
    else if (light > 20000) lightStatus = "‡πÅ‡∏™‡∏á‡∏à‡πâ‡∏≤ üåû";
    else if (light > 5000) lightStatus = "‡πÅ‡∏™‡∏á‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏°‡∏≤‡∏Å ‚òÄÔ∏è";
    else if (light > 1000) lightStatus = "‡πÅ‡∏™‡∏á‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á üå§";
    else if (light > 50) lightStatus = "‡πÅ‡∏™‡∏á‡∏ô‡πâ‡∏≠‡∏¢ ‚õÖ";
    else if (light > 20) lightStatus = "‡πÅ‡∏™‡∏á‡∏°‡∏∑‡∏î üåë";
    else if (light > 10) lightStatus = "‡∏°‡∏∑‡∏î‡∏°‡∏≤‡∏Å üåë";
    else if (light > 5) lightStatus = "‡∏°‡∏∑‡∏î‡∏°‡∏≤‡∏Å‡πÜ üåë";
    else lightStatus = "‡∏°‡∏∑‡∏î‡∏™‡∏ô‡∏¥‡∏ó";

    // ‡πÅ‡∏õ‡∏•‡∏Ñ‡πà‡∏≤‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥
    let tempStatus;
    if (temp > 35) tempStatus = "‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å ‚ö†Ô∏è";
    else if (temp >= 30) tempStatus = "‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏£‡πâ‡∏≠‡∏ô üî•";
    else if (temp >= 25) tempStatus = "‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏≠‡∏∏‡πà‡∏ô‡πÜ üåû";
    else if (temp >= 20) tempStatus = "‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏û‡∏≠‡∏î‡∏µ üå§";
    else tempStatus = "‡∏≠‡∏∏‡∏ì‡∏´‡∏π‡∏°‡∏¥‡πÄ‡∏¢‡πá‡∏ô ‚ùÑÔ∏è";

    // ‡πÅ‡∏õ‡∏•‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô
    let humidityStatus;
    if (humidity > 80) humidityStatus = "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å üí¶";
    else if (humidity > 60) humidityStatus = "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡∏™‡∏π‡∏á üåßÔ∏è";
    else if (humidity > 30) humidityStatus = "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ üå§Ô∏è";
    else if (humidity > 20) humidityStatus = "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡∏ï‡πà‡∏≥ üåµ";
    else humidityStatus = "‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÅ‡∏´‡πâ‡∏á‡∏°‡∏≤‡∏Å üèúÔ∏è";

    // ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏ù‡∏ô
    let rainForecastStatus;
    if (humidity >= 80 && temp >= 24 && temp <= 32) {
      rainForecastStatus = "üåßÔ∏è ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ù‡∏ô‡∏ï‡∏Å";
    } else {
      rainForecastStatus = "‚òÄÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ù‡∏ô‡∏ï‡∏Å";
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏õ‡∏•
    document.getElementById("light-status").textContent = lightStatus;
    document.getElementById("temp-status").textContent = tempStatus;
    document.getElementById("humidity-status").textContent = humidityStatus;
    document.getElementById("rain-forecast").textContent = rainForecastStatus;

  } catch (error) {
    console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
  }
}

// ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
function getThaiDateParts(date) {
  const optionsDate = {
    weekday: "long",
    day: "numeric",
    month: "long",
    year: "numeric",
  };

  const optionsTime = {
    hour: "2-digit",
    minute: "2-digit",
    second: "2-digit",
    hour12: false,
  };

  const thDateFormatter = new Intl.DateTimeFormat("th-TH", optionsDate);
  const thTimeFormatter = new Intl.DateTimeFormat("th-TH", optionsTime);

  const parts = thDateFormatter.formatToParts(date);
  const time = thTimeFormatter.format(date);

  const dayOfWeek = parts.find(p => p.type === "weekday")?.value ?? "";
  const day = parts.find(p => p.type === "day")?.value ?? "";
  const month = parts.find(p => p.type === "month")?.value ?? "";
  const year = parts.find(p => p.type === "year")?.value ?? "";

  return {
    dayOfWeek,
    day,
    month,
    year,
    time
  };
}

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
fetchSensorData();
// ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
setInterval(fetchSensorData, 1000);
